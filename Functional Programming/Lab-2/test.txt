Task 1

examples
rev_bin_rep 0 = [0]
rev_bin_rep 1 gives [1]
rev_bin_rep 2 gives [0, 1]
rev_bin_rep 3 gives [1, 1]

cases 

rev_bin_rep 0 = [0]
rev_bin_rep n = ?

base case

rev_bin_rep 4/2 = 4%2 = [0]
rev_bin_rep 2/2 = 2%2 = [0]
rev_bin_rep 1 = [1]

rev_bin_rep n = (n%2:rev_bin_rep n/2) 


Task 2

examples
selections [0,1] [(0,0),(1,2),(2,4)] = [0,2]
selections [0,2] [(0,0),(1,2),(2,4)] = [0,4]
selections [i0, i2] [[(j0, a0 ), (j1, a1), (j2, a2)] = [a0, a2]

signature
selections :: [Int] -> [(Int, Int)] -> [Int]

cases
selections [] [_] = []
selections [_] [] = []

base case
selections (i:is) (t:ts) = (snd t!!i : selections is ts)


Examples
concatenations [[[0]],[[2],[3]],[[4],[5]]] = [[0,2,4],[0,2,5],[0,3,4],[0,3,5]]
concatenations [[[0,1]],[[2],[3]],[[4,5],[6]]] = [[0,1,2,4,5],[0,1,2,6],[0,1,3,4,5],[0,1,3,6]] 

Signature
concatenations :: [[[Int]]] = [[Int]]

Cases
concatenations [[[]]] = [[]]

concatenations [[[0]],[[2]],[[5]]]

concatenations ():[l1 | l1]:(l1:l1s),(l2:l2s),(l3:l3s)


Examples
k_ary_patterns 0 gives [(1,[]),(2,[]),...];
k_ary_patterns 1 gives [(1,[[0]]),(2,[[0,0]]),...];
k_ary_patterns 2 gives [(1,[[0],[1]]),(2,[[0,0],[0,1],[1,0],[1,1]]),...];

signature
k_ary_patterns :: Int -> [(Int, [[Int]])]

cases
k_ary_patterns n = () 
